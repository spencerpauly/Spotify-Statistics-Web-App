var playlistId;
var playlistLink;
var uriList = [];

document.getElementById('track-download-btn').addEventListener('click', function() {
    $(this).addClass("disabled");
    $(this).prop('disabled', true);
    createPlaylist("My Top 50 Tracks");
    window.open(playlistLink, '_blank');
    
});

function createPlaylist(playlistName) {
    if (isAuthenticated) {
        var date = new Date();
        var today = date.getMonth()+1 + '/' + date.getDate() + '/' + date.getFullYear();
        var pName = playlistName + " - " + currentDuration + " - " + today;
        var pDesc = "This playlist has been automatically generated by spencerpauly.com. Enjoy!";
      
        var myData = JSON.stringify({
            name: pName, 
            description: pDesc,
            public: true
        });

        $.ajax({
          method: "POST",
          url: 'https://api.spotify.com/v1/users/' + myId + '/playlists',
          headers: {
            'Authorization': 'Bearer ' + access_token,
            'Content-Type': 'application/json'
          },
          data: myData,
          success: function(response) {
            playlistId = response.id;
            playlistLink = response.external_urls.spotify;
            fillPlaylist();
          },
          async: false
        });
      } else {
        authenticate();
      }
}

function fillPlaylist() {

    var uriString = getCurrentTracks().toString();

    if (isAuthenticated) {

        $.ajax({
          method: "POST",
          url: 'https://api.spotify.com/v1/playlists/' + playlistId + '/tracks?uris=' + uriString,
          headers: {
            'Authorization': 'Bearer ' + access_token,
            'Content-Type': 'application/json'
          },
          success: function(response) {
            
        },
          async: false
        });
      } else {
        authenticate();
      }    

}

function getCurrentTracks() {
    uriList = [];
    tracks[currentTrackNum].map( function(track) {
        uriList.push(track.uri);
      });
   

    return uriList;
}

function forwardUser() {
    




}